-- SERVER VARS
local server_adress = "demos.kaazing.com"
local server_port = "80"
local room_name = "echo" -- "Room name"

-- VARS
local isConnected = false
local debug_gui = "/gui#debug_gui"
local ping = 0
local ws_message = {}
local pos = vmath.vector3(0, 0, 0)
local set_position = go.set_position
local vector3 = vmath.vector3

-- Messages to Debug GUI
local function send_status(txt)
	msg.post(debug_gui, "update_status", {status = txt})
end

local function send_ping(txt)
	msg.post(debug_gui, "update_ping", {status = txt})
end

-- Force close connection
local function close_connection(name)
	uwebsockets.close(name)
end

-- Lua Callbacks
local function general_callbacks(self, message)
	if uwebsockets.ON_ERROR == message.event_id then
		send_status("ERROR")
		isConnected = false
	elseif uwebsockets.ON_CONNECTION == message.event_id then
		send_status("CONNECTED")
		isConnected = true
	elseif uwebsockets.ON_MESSAGE == message.event_id then
		send_status("MESSAGE")
		ws_message = json.decode(message.json)

		ping = socket.gettime() - ws_message.time
		send_ping(ping)

		pos = vector3(ws_message.pos.x, ws_message.pos.y, 1)
		set_position(pos, "logo")
	elseif uwebsockets.ON_DISCONNECT == message.event_id then
		send_status("DISCONNECT")
		isConnected = false
		close_connection("general")
	end
end

function init(self)
	print("Server: ws://" .. server_adress .. ":" .. server_port .. "/" .. room_name)
	send_status("CONNECTING")

	uwebsockets.connect(
		"ws://" .. server_adress .. ":" .. server_port .. "/" .. room_name,
		"general",
		general_callbacks,
		1000
	)
	msg.post(".", "acquire_input_focus")
end

function on_input(self, action_id, action)
	if isConnected then
		-- repeat_interval and repeat_delay are edited in game.project. Don't send 60fps, It may cause disconnection :)
		if action_id == hash("touch") and action.repeated and isConnected then
			uwebsockets.send(
				"general",
				'{"time":' .. socket.gettime() .. ' ,"pos":{"y":' .. action.y .. ',"x":' .. action.x .. "}}"
			)
		end
	end
end
